type UserRole @model @auth(rules: [{allow: public}]) {
  username: String!
  roleType: String!
  org: String!
  year: String
  subjects: [String]
  voucherApplied: String
  User: User @hasOne
  id: ID!
  partnerCentre: String
  availabilities: [String]
}

type Voucher @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  code: String!
  active: Boolean!
  value: Float
}

enum MessageStatus {
  SENT
  DELIVERED
  READ
}

type Message @model @auth(rules: [{allow: public}]) {
  id: ID!
  content: String
  userID: ID! @index(name: "byUser")
  chatroomID: ID! @index(name: "byChatRoom")
  image: String
  audio: String
  status: MessageStatus
  replyToMessageID: ID
}

type ChatRoom @model @auth(rules: [{allow: public}]) {
  id: ID!
  newMessages: Int
  LastMessage: Message @hasOne
  Messages: [Message] @hasMany(indexName: "byChatRoom", fields: ["id"])
  ChatRoomUsers: [User] @manyToMany(relationName: "ChatRoomUser")
  topic: String
  active: Boolean
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  givenName: String!
  Messages: [Message] @hasMany(indexName: "byUser", fields: ["id"])
  chatrooms: [ChatRoom] @manyToMany(relationName: "ChatRoomUser")
  familyName: String!
  avatarImage: String
  lastOnlineAt: AWSTimestamp
  UserRole: UserRole @belongsTo
}
 